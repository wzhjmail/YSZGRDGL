<?xml version="1.0" encoding="UTF-8"?>  
    <beans xmlns="http://www.springframework.org/schema/beans"  
        xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        xmlns:p="http://www.springframework.org/schema/p"  
        xmlns:context="http://www.springframework.org/schema/context"  
        xmlns:mvc="http://www.springframework.org/schema/mvc"  
        xmlns:aop="http://www.springframework.org/schema/aop"
		xmlns:tx="http://www.springframework.org/schema/tx"  
        xsi:schemaLocation="http://www.springframework.org/schema/beans    
                            http://www.springframework.org/schema/beans/spring-beans-3.1.xsd    
                            http://www.springframework.org/schema/context    
                            http://www.springframework.org/schema/context/spring-context-3.1.xsd    
                            http://www.springframework.org/schema/mvc    
                            http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd
                            http://www.springframework.org/schema/aop
       						http://www.springframework.org/schema/aop/spring-aop-4.0.xsd
       						http://www.springframework.org/schema/tx 
       						http://www.springframework.org/schema/tx/spring-tx-4.0.xsd">
	
	<bean id="lifecycleBeanPostProcessor" class="org.apache.shiro.spring.LifecycleBeanPostProcessor" />
	<!-- 退出系统的bean-->
   	<bean id="logout" class="org.apache.shiro.web.filter.authc.LogoutFilter">
     	<property name="redirectUrl" value="/first.action" /> 
	</bean> 
	<!-- 开启shiro注解支持 -->
   	<bean class="org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor">
		<property name="securityManager" ref="securityManager" />
	</bean>
      	<!-- web.xml中shiro的filter对应的bean -->
      	<!-- 权限不足时跳转页面的配置 -->
	<bean class="org.springframework.web.servlet.handler.SimpleMappingExceptionResolver">
		<property name="exceptionMappings">
			<props>
				<prop key="org.apache.shiro.authz.UnauthorizedException">/unauthorized</prop>
			</props>
		</property>
	</bean>
	<!-- 记住我功能设置session的Filter,再次进入时，将session中注入值 -->
	<bean id="rememberMeFilter" class="com.wzj.shiro.RememberMeFilter"/>
	<!-- 实现退出的过滤器 -->
	<bean id="logoutFilter" class="com.wzj.shiro.BeforeLogout"/>
	<!-- Shiro 的Web过滤器 -->
	<bean id="shiroFilter" class="org.apache.shiro.spring.web.ShiroFilterFactoryBean">
		<property name="securityManager" ref="securityManager" />
		<!-- loginUrl认证提交地址，如果没有认证将会请求此地址进行认证，请求此地址将由formAuthenticationFilter进行表单认证 -->
		<property name="loginUrl" value="/login.action" />
		<!-- 认证成功统一跳转到first.action，建议不配置，shiro认证成功自动到上一个请求路径 -->
		<property name="successUrl" value="/first.action"/>
		<!-- 通过unauthorizedUrl指定没有权限操作时跳转页面,不起作用-->
		<property name="unauthorizedUrl" value="/refuse.action" />
		<!-- 自定义filter配置 -->
		<property name="filters">
			<map>
				<!-- 将自定义 的FormAuthenticationFilter注入shiroFilter中-->
				<entry key="authc" value-ref="formAuthenticationFilter" />
				<entry key="user" value-ref="rememberMeFilter"/>
				<!-- 配置自己的退出的过滤器-->
				<entry key="logout" value-ref="logoutFilter"/> 
			</map>
		</property>
      	<!-- 过虑器链定义，从上向下顺序执行，一般将/**放在最下边 -->
		<property name="filterChainDefinitions">
			<value>
				<!-- 对静态资源设置匿名访问
				/*.jsp = anon-->
				/ =anon
				/registration.jsp = anon
				/index.jsp = anon
				/sysUser/register.action = anon
				/sysUser/checkRegist.action = anon
				/role/findAll.action = anon <!-- 如果不设置，在不登录的情况下注册，不嗯给你插叙角色 -->
				/role/findRoles.action = anon
				/checkCode.action= anon
				/checkAudit.action= anon
				/img/** = anon
				/js/** = anon
				/assets/** = anon
				/css/** = anon
				../resources/* = anon
				/validatecode.jsp=anon
				/repository.action=anon
			   /logout.action = logout 
			    <!-- 配置记住我或认证通过可以访问的地址 -->
			    <!-- /refuse.jsp = anon
				/** = authc -->
				/login.action = authc
				/** = user
			</value>
		</property>
	</bean>
		
	<!-- securityManager安全管理器 -->
	<bean id="securityManager" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">
		<property name="realm" ref="customRealm" />
		<!-- 注入缓存管理器 -->
		<property name="cacheManager" ref="cacheManager"/>
		<!-- 注入session管理器 -->
		<property name="sessionManager" ref="sessionManager" />
		<!-- 记住我 -->
		<property name="rememberMeManager" ref="rememberMeManager"/>
	</bean>
	
	<!-- realm -->
	<bean id="customRealm" class="com.wzj.shiro.CustomRealm">
		<!-- 将凭证匹配器设置到realm中，realm按照凭证匹配器的要求进行散列 
		<property name="credentialsMatcher" ref="credentialsMatcher"/>-->
	</bean>
		<!-- 凭证匹配器 -->
	 <bean id="credentialsMatcher" class="org.apache.shiro.authc.credential.HashedCredentialsMatcher">
		<property name="hashAlgorithmName" value="md5" />
		<property name="hashIterations" value="1" />
	</bean> 
	<!-- 缓存管理器 -->
	<bean id="cacheManager" class="org.apache.shiro.cache.ehcache.EhCacheManager">
    	<property name="cacheManagerConfigFile" value="classpath:shiro-ehcache.xml"/>
    </bean>
    <!-- 实现账号同一时间只能在一处登录 --> 
	<bean id="sessionDao" class="org.apache.shiro.session.mgt.eis.MemorySessionDAO"></bean>
	    
		<!-- 会话管理器 -->
    <bean id="sessionManager" class="org.apache.shiro.web.session.mgt.DefaultWebSessionManager">
        <!-- session的失效时长，单位毫秒 -->
        <property name="globalSessionTimeout" value="99999999"/>
       <!--  删除失效的session -->
        <property name="deleteInvalidSessions" value="true"/>
        
        <property name="sessionDAO" ref="sessionDao"/>
    </bean>
    
    <!-- rememberMeManager管理器，写cookie，取出cookie生成用户信息 -->
    <bean id="rememberMeManager" class="org.apache.shiro.web.mgt.CookieRememberMeManager">
    	<property name="cookie" ref="rememberMeCookie"/>
    </bean>
    <!-- 记住我cookie -->
    <bean id="rememberMeCookie" class="org.apache.shiro.web.servlet.SimpleCookie">
    	<!-- rememberMe是cookie的名字 -->
    	<constructor-arg value="rememberMe"/>
    	<!-- 记住我cookie生效时间7天 -->
    	<property name="maxAge" value="604800"/>
    </bean>
    <!-- 自定义form认证过虑器 -->
	<!-- 基于Form表单的身份验证过滤器，不配置将也会注册此过虑器，表单中的用户账号、密码及loginurl将采用默认值，建议配置 -->
	<bean id="formAuthenticationFilter"  class="com.wzj.shiro.CustomFormAuthenticationFilter">
		<property name="usernameParam" value="username" />
		<property name="passwordParam" value="password" />
	</bean>
</beans>	
	
	
	
	
	 